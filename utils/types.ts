export type CreateUserServiceParams = {
    name: string;
    email: string;
    phone: string;
    password: string;
}

export type LoginUserServiceParams = {
    email: string;
    password: string;
}

export type CreateTeacherServiceParams = {
    name: string;
    email: string;
    password: string;
    expertise: string;
    phone: string;
}

export type LoginTeacherServiceParams = {
    email: string;
    password: string;
}

export type CreateCategoriesServiceParams = {
    name: string;
    description?: string;
    imageUrl?: string;
}

export type GetCategorySearchCriteria = {
    name?: string;
    id?: string;
}

export type CreateAdminServiceParams = {
    name: string;
    email: string;
    password: string;
}

export type LoginAdminServiceParams = {
    email: string;
    password: string;
}

// --- NEW TYPE: Syllabus Section ---
export type SyllabusSection = {
    title: string;
    content: string; // Or a more complex type if you have rich content, like an array of sub-topics
    // You could also add other fields here if your frontend supports them, e.g.,
    // order?: number;
    // videoUrl?: string;
};
// --- END NEW TYPE ---

// --- NEW TYPE: Course Content Module ---
export type CourseContentModule = {
    id?: string; // Optional, for client-side keying or if generated by backend
    title: string;
    videoUrl?: string; // The URL to the video content
    description?: string; // A description for this specific content module
    order?: number; // To define the sequence of modules
    // Add any other properties relevant to a content piece, e.g.:
    //  duration?: number; // in seconds
    //  type?: 'video' | 'article' | 'quiz' | 'download';
    //  resources?: { name: string, url: string }[]; // For downloadable resources
};
// --- END NEW TYPE ---


export type CreateCourseServiceParams = {
    name: string;
    description?: string;
    imageUrl?: string;
    categoryId: string;
    price?: number;
    demoVideoUrl?: string;
    courseType: string;
    active?: boolean;
    syllabus?: SyllabusSection[];
    // --- ADDED: Optional array of course content modules ---
    contents?: CourseContentModule[];
}

export interface CreateTestSeriesServiceParams {
    name: string;
    description?: string;
    createdBy: string;
}

export interface UpdateTestSeriesServiceParams {
    name?: string;
    description?: string;
}
export interface CreateQuestionServiceParams {
    testId: string;
    questionText: string;
}
export interface UpdateQuestionServiceParams {
    questionText?: string;
}

export interface CreateOptionServiceParams {
    questionId: string;
    text: string;
    isCorrect: boolean;
}

export interface UpdateOptionServiceParams {
    text?: string;
    isCorrect?: boolean;
}

export type UpdateCourseServiceParams = {
    name?: string;
    description?: string;
    imageUrl?: string;
    categoryId?: string;
    price?: number;
    courseType?: string;
    demoVideoUrl?: string;
    active?: boolean;
    syllabus?: SyllabusSection[];
    // --- ADDED: Optional array of course content modules ---
    contents?: CourseContentModule[];
}

export type CourseTeacherServiceOperationType = 'assign' | 'unassign';

export type GetTeacherFilterType = {
    name?: string;
    email?: string;
    expertise?: string;
    phone?: string;
    id?: string;
}

export type GetAllCourseServiceParams = {
    categoryId?: string;
    id?: string;
    active?: boolean
    teacherId?: string;
}

export type GetCourseFilters = {
    limit?: number;
    offset?: number;
}


// --- UPDATED: Added 'price' field ---
export interface CreateQuestionBankServiceParams {
    name: string;
    description?: string;
    filePath: string;
    fileName: string;
    uploadedBy?: string; // Optional, if you're tracking the uploader (UUID)
    price: number; // Added price field: required for creation
}

// --- UPDATED: Added 'price' field ---
export interface UpdateQuestionBankServiceParams {
    name?: string;
    description?: string;
    filePath?: string; // Only if you're replacing the file
    fileName?: string; // Only if you're replacing the file
    uploadedBy?: string;
    price?: number; // Added price field: optional for update
}

// --- UPDATED: Added 'price' field ---
export interface QuestionBankData {
    id: string;
    name: string;
    description: string | null; // Database might return null, so account for it
    filePath: string;
    fileName: string;
    price: number; // Added price field
    uploadedBy: string | null; // Database might return null
    uploadDate: Date;
    createdAt: Date;
    updatedAt: Date;
}
