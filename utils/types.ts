export type CreateUserServiceParams = {
    name: string;
    email: string;
    phone: string;
    password: string;
}

export type LoginUserServiceParams = {
    email: string;
    password: string;
}

export type CreateTeacherServiceParams = {
    name: string;
    email: string;
    password: string;
    expertise: string;
    phone: string;
}

export type LoginTeacherServiceParams = {
    email: string;
    password: string;
}

export type CreateCategoriesServiceParams = {
    name: string;
    description?: string;
    imageUrl?: string;
}

export type GetCategorySearchCriteria = {
    name?: string;
    id?: string;
}

export type CreateAdminServiceParams = {
    name: string;
    email: string;
    password: string;
}

export type LoginAdminServiceParams = {
    email: string;
    password: string;
}

// --- NEW TYPE: Syllabus Section ---
export type SyllabusSection = {
    title: string;
    content: string; // Or a more complex type if you have rich content, like an array of sub-topics
};
// --- END NEW TYPE ---

// --- NEW TYPE: Course Content Module ---
export type CourseContentModule = {
    id?: string; // Optional, for client-side keying or if generated by backend
    title: string;
    videoUrl?: string; // The URL to the video content
    description?: string; // A description for this specific content module
    order?: number; // To define the sequence of modules
};
// --- END NEW TYPE ---


export type CreateCourseServiceParams = {
    name: string;
    description?: string;
    imageUrl?: string;
    categoryId: string;
    price?: number;
    demoVideoUrl?: string;
    courseType: string;
    active?: boolean;
    syllabus?: SyllabusSection[];
    contents?: CourseContentModule[];
}

// --- UPDATED: TestSeriesServiceParams (Now 'type') ---
export type CreateTestSeriesServiceParams = {
    name: string;
    description?: string;
    createdBy: string; // The ID of the user/admin who created this series
}

export type UpdateTestSeriesServiceParams = {
    name?: string;
    description?: string;
}
// --- END UPDATED: TestSeriesServiceParams ---

// --- NEW: TestServiceParams (Now 'type') ---
export type CreateTestServiceParams = {
    testSeriesId: string; // Links to the parent TestSeries
    name: string; // Name of this specific test (e.g., "Chapter 1 Quiz")
    description?: string;
    durationMinutes: number; // Duration of this specific test
    numberOfQuestions: number; // Expected number of questions for this test
    passMarkPercentage: number; // Pass mark for this specific test
    createdBy: string; // The ID of the user/admin who created this test
}

export type UpdateTestServiceParams = {
    name?: string;
    description?: string;
    durationMinutes?: number;
    numberOfQuestions?: number;
    passMarkPercentage?: number;
}
// --- END NEW: TestServiceParams ---


// --- UPDATED: QuestionServiceParams (Now 'type') ---
export type CreateQuestionServiceParams = {
    testId: string; // Foreign key to the Test model
    questionText: string;
    options: string[]; // Array of strings for MCQ options
    correctAnswerIndex: number; // 0-based index of the correct option
    points: number; // Points for this question
}

export type UpdateQuestionServiceParams = {
    questionText?: string;
    options?: string[];
    correctAnswerIndex?: number;
    points?: number;
}
// --- END UPDATED: QuestionServiceParams ---


export type UpdateCourseServiceParams = {
    name?: string;
    description?: string;
    imageUrl?: string;
    categoryId?: string;
    price?: number;
    courseType?: string;
    demoVideoUrl?: string;
    active?: boolean;
    syllabus?: SyllabusSection[];
    contents?: CourseContentModule[];
}

export type CourseTeacherServiceOperationType = 'assign' | 'unassign';

export type GetTeacherFilterType = {
    name?: string;
    email?: string;
    expertise?: string;
    phone?: string;
    id?: string;
}

export type GetAllCourseServiceParams = {
    categoryId?: string;
    id?: string;
    active?: boolean
    teacherId?: string;
}

export type GetCourseFilters = {
    limit?: number;
    offset?: number;
}


// --- UPDATED: Added 'price' field ---
export type CreateQuestionBankServiceParams = {
    name: string;
    description?: string;
    filePath: string;
    fileName: string;
    uploadedBy?: string; // Optional, if you're tracking the uploader (UUID)
    price: number; // Added price field: required for creation
}

// --- UPDATED: Added 'price' field ---
export type UpdateQuestionBankServiceParams = {
    name?: string;
    description?: string;
    filePath?: string; // Only if you're replacing the file
    fileName?: string; // Only if you're replacing the file
    uploadedBy?: string;
    price?: number; // Added price field: optional for update
}

// --- UPDATED: Added 'price' field ---
export type QuestionBankData = {
    id: string;
    name: string;
    description: string | null; // Database might return null, so account for it
    filePath: string;
    fileName: string;
    price: number; // Added price field
    uploadedBy: string | null; // Database might return null
    uploadDate: Date;
    createdAt: Date;
    updatedAt: Date;
}
